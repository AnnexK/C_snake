#ifndef SNAKE_H_GAME
#define SNAKE_H_GAME

#include <time.h>
#include <stdlib.h>
#include <curses.h>

#include "snake.h"
#include "windows.h"

#define NAMESIZE 3

typedef char name[NAMESIZE + 1];

typedef enum state
{
    MENU,
    GAME,
    HIGHSCORE,
    SETTINGS
} State;

void initcurses(void);
WindowHandle setwin(unsigned, unsigned, unsigned, unsigned);
int exitcurses(void);

struct
{
    State state;
    WindowHandle main, aux;
    
    GameData gamedata;
    
    FILE *highscore;

    void (*init)(void);
    int (*kill)(void);
} Game = {
    GAME,
    {
	NULL,
	0,
	0,
	0,
	0,
	display_main_game
    },
    {
	NULL,
	0,
	0,
	0,
	0,
	display_aux_game
    },
    {
	NULL,
	{
	    0,
	    0
	},
	moveSnake,
	growSnake,
	isCollision,
	0    
    },
    NULL,
    initcurses,
    exitcurses
};

void initcurses(void)
{
    srand(time(NULL));
    
    initscr();
    cbreak();
    noecho();

    int y, x;
    getmaxyx(stdscr, y, x);

    Game.main = setwin(y-2, x, 0, 0);
    Game.aux = setwin(2, x, y-2, 0);        
}

WindowHandle setwin(unsigned w, unsigned h, unsigned y, unsigned x)
{
    WindowHandle ret;
    ret.wptr = newwin(w, h, y, x);
    ret.w = w;
    ret.h = h;
    ret.y = y;
    ret.x = x;

    return ret;
}

int exitcurses(void)
{
    delwin(Game.main.wptr);
    delwin(Game.aux.wptr);

    endwin();

    return 0;
}

#endif
